(define (plus x y)
    (let ((tag-x (type-tag x))
          (tag-y (type-tag y))
          (content-x (contents x))
          (content-y (contents y))
          (x->y (get tag-x tag-y))
          (y->x (get tag-y tag-x)))
        (cond ((equal? tag-x tag-y) (attach-tag tag-x (+ content-x content-y)))
              ((and x->y (number? x->y)) (attach-tag tag-y (+ (* x->y content-x) content-y)))
              ((and y->x (number? y->x)) (attach-tag tag-x (+ content-x (* y->x content-y))))
              (else (error "you can't add" tag-x "and" tag-y)))))
