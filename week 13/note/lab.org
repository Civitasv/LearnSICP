* CS 61A Week 13 Lab

Problem 1:

*4.27:*

#+begin_src scheme
  (define count 0)
  (define (id x)
    (set! count (+ count 1))
    x)

  (define w (id (id 10)))

  count ; 1
  w ; 10
  count ; 2
#+end_src

*4.29:*

#+begin_src scheme
  (define (exp x y)
    (if (= y 0)
        1
        (* x (exp x (- y 1)))))
#+end_src

#+begin_src scheme
  (define (square x)
    (* x x))
  (square (id 10)) ; 100
  count ; 2 without memoizing 1 with memoizing
#+end_src

Problem 2:

#+begin_src scheme
  (define (square x cont)
    (cont (* x x)))
#+end_src
